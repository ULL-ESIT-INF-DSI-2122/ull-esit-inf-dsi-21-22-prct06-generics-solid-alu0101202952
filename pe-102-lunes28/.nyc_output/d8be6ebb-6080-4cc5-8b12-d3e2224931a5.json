{"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102-lunes28/src/primenumber.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102-lunes28/src/primenumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":31}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":31}},"4":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"5":{"start":{"line":24,"column":12},"end":{"line":24,"column":56}},"6":{"start":{"line":26,"column":8},"end":{"line":26,"column":39}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":52}},"8":{"start":{"line":40,"column":8},"end":{"line":40,"column":59}},"9":{"start":{"line":47,"column":18},"end":{"line":47,"column":20}},"10":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"11":{"start":{"line":48,"column":21},"end":{"line":48,"column":22}},"12":{"start":{"line":49,"column":12},"end":{"line":49,"column":80}},"13":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"14":{"start":{"line":58,"column":12},"end":{"line":58,"column":29}},"15":{"start":{"line":60,"column":8},"end":{"line":60,"column":60}},"16":{"start":{"line":69,"column":18},"end":{"line":69,"column":20}},"17":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"18":{"start":{"line":71,"column":12},"end":{"line":71,"column":29}},"19":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"20":{"start":{"line":73,"column":21},"end":{"line":73,"column":22}},"21":{"start":{"line":74,"column":12},"end":{"line":74,"column":62}},"22":{"start":{"line":76,"column":8},"end":{"line":78,"column":11}},"23":{"start":{"line":77,"column":12},"end":{"line":77,"column":39}},"24":{"start":{"line":79,"column":8},"end":{"line":79,"column":19}},"25":{"start":{"line":82,"column":0},"end":{"line":82,"column":34}},"26":{"start":{"line":83,"column":13},"end":{"line":83,"column":43}},"27":{"start":{"line":84,"column":0},"end":{"line":84,"column":49}},"28":{"start":{"line":85,"column":0},"end":{"line":85,"column":73}},"29":{"start":{"line":86,"column":0},"end":{"line":86,"column":65}},"30":{"start":{"line":87,"column":0},"end":{"line":87,"column":82}},"31":{"start":{"line":88,"column":0},"end":{"line":88,"column":75}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":17,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":30},"end":{"line":27,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":21},"end":{"line":34,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":21},"end":{"line":41,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":32},"end":{"line":51,"column":5}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":28},"end":{"line":61,"column":5}},"line":56},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":35},"end":{"line":80,"column":5}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":76,"column":20},"end":{"line":76,"column":21}},"loc":{"start":{"line":76,"column":32},"end":{"line":78,"column":9}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"1":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"2":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"3":{"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":118}},"type":"binary-expr","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":63}},{"start":{"line":70,"column":67},"end":{"line":70,"column":118}}],"line":70}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":2,"7":3,"8":7,"9":2,"10":2,"11":2,"12":12,"13":2,"14":0,"15":2,"16":2,"17":2,"18":2,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"f":{"0":1,"1":2,"2":3,"3":7,"4":2,"5":2,"6":2,"7":0},"b":{"0":[1,1],"1":[0,2],"2":[2,0],"3":[2,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102-lunes28/src/primenumber.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102-lunes28/src/primenumber.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,MAAa,WAAW;IASpB;;OAEG;IACH;QAXQ,iBAAY,GAAa,EAAE,CAAA;QAY/B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,gBAAgB;QAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAC1B,WAAW,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;SAC/C;QACD,OAAO,WAAW,CAAC,WAAW,CAAC;IACnC,CAAC;IAED;;;OAGG;IACI,cAAc;QACjB,OAAO,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC;IAChD,CAAC;IAED;;;OAGG;IACI,cAAc;QACjB,OAAO,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;IACvD,CAAC;IAED;;;OAGG;IACI,cAAc,CAAC,WAAqB;QACvC,IAAI,GAAG,GAAc,EAAE,CAAA;QACvB,KAAI,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC/C,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SACtE;IACL,CAAC;IAED;;;OAGG;IACI,eAAe,CAAC,MAAc;QACjC,IAAI,MAAM,IAAI,WAAW,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;YACpD,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,OAAe,EAAE,OAAe;QAChD,IAAI,GAAG,GAAa,EAAE,CAAA;QACtB,IAAI,OAAO,IAAI,WAAW,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,OAAO,IAAI,WAAW,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;YAC5G,OAAO,SAAS,CAAC;SACpB;QACD,KAAI,IAAI,CAAC,GAAW,CAAC,EAAG,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,EAAC;YACtE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SACrD;QACD,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;QAC9B,CAAC,CAAC,CAAA;QACF,OAAO,GAAG,CAAA;IACd,CAAC;CACJ;AApFD,kCAoFC;AAED,IAAI,MAAM,GAAG,WAAW,CAAC,gBAAgB,EAAE,CAAC;AAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;AAC/C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACzE,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAC,MAAM,CAAC,cAAc,EAAE,GAAC,GAAG,CAAC,CAAC;AAC7D,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC","sourcesContent":["/**\n * PE 102- LUNES 28 DE MARZO 2022\n * Andrea Calero Caro\n * @class PrimeNumber con tiene las especificaciones y búsqueda de números primos\n * @private @param prime_number que es un array de números\n */\nexport class PrimeNumber{\n    private prime_number: number[] = []\n\n    /**\n     * 1º @static primenumber atributo privado estático cuyo tipo es la propia clase PrimeNumber\n     * para almacenar la única instancia que va a tener dicha clase.\n     */\n    private static primenumber: PrimeNumber;\n\n    /**\n     * 2º @constructor privado por lo que no puede ser invocado desde fuera de la propia clase.\n     */\n    private constructor(){\n        this.prime_number = [];\n    }\n\n    /**\n     * 3º Método público que retorna la instancia del primo\n     * @returns la instancia privada del número primo\n     */\n    public static getPrimeInstance(): PrimeNumber {\n        if (!PrimeNumber.primenumber) {\n            PrimeNumber.primenumber = new PrimeNumber();\n        }\n        return PrimeNumber.primenumber;\n    }\n\n    /**\n     * Método público que retorna el número primo \n     * @returns ela instancia llamando al número primo\n     */\n    public getPrimeNumber() {\n        return PrimeNumber.primenumber.prime_number;\n    }\n\n    /**\n     * Método público que retorna el número primo \n     * @returns ela instancia llamando al número primo\n     */\n    public getPrimeLenght() {\n        return PrimeNumber.primenumber.prime_number.length;\n    }\n\n    /**\n     * Método público setter para añadir un nuevo número primo\n     * @param nuevo_primo a añadir\n     */\n    public setPrimeNumber(nuevo_primo: number[]) {\n        let aux: number [] = []\n        for(let i: number = 0; i < nuevo_primo.length; i++){\n            aux.push(PrimeNumber.primenumber.prime_number.push(nuevo_primo[i]))\n        }\n    }\n\n    /**\n     * Método público que retorna el número primo \n     * @returns ela instancia llamando al número primo\n     */\n    public getNPrimeNumber(indice: number) {\n        if (indice >= PrimeNumber.primenumber.getPrimeLenght()) {\n            return undefined;\n        }\n        return PrimeNumber.primenumber.prime_number[indice];\n    }\n\n    /**\n     * Apartado 2: Método que devuelve los primos entre un rango de indice1 a indice2\n     * @param indice1 (m) indice superior\n     * @param indice2 (n) índice inferior\n     * @returns los primos comprendidos entre esos rangos\n     */\n    public getNToMPrime(indice1: number, indice2: number){\n        let aux: number[] = []\n        if (indice2 >= PrimeNumber.primenumber.getPrimeLenght() || indice1 <= PrimeNumber.primenumber.getPrimeLenght()) {\n            return undefined;\n        }\n        for(let i: number = 0 ; i < PrimeNumber.primenumber.getPrimeLenght(); i++){\n            aux.push(PrimeNumber.primenumber.prime_number[i]);\n        }\n        aux.forEach(elemento =>{\n            console.log(aux[elemento])\n        })\n        return aux\n    }\n}\n\nlet primo1 = PrimeNumber.getPrimeInstance();\nconsole.log('Vacío: '+primo1.getPrimeNumber());\nconsole.log(primo1.setPrimeNumber([2, 3, 5, 7, 11, 13, 17, 19, 23, 29]));\nconsole.log('Números primos: ['+primo1.getPrimeNumber()+']');\nconsole.log('\\nN primero números primos(índice 1): '+primo1.getNPrimeNumber(3));\nconsole.log('\\nNúmeros primos de n hasta m: '+primo1.getNToMPrime(3,6));"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d0ed74f0eee8d608ec1579045e3fb42e83507dfe","contentHash":"64196815c0967661627f9178a47bd1aa856e13e8fcfee123eb59a00a0ba87ed6"}}