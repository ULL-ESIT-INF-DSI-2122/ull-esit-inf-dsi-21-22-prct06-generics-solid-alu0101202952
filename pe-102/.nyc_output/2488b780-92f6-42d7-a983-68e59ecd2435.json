{"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102/src/ejercicio-1/collectable.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102/src/ejercicio-1/collectable.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":34}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":34}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":33}},"7":{"start":{"line":38,"column":0},"end":{"line":38,"column":34}},"8":{"start":{"line":42,"column":19},"end":{"line":42,"column":45}},"9":{"start":{"line":43,"column":0},"end":{"line":43,"column":35}},"10":{"start":{"line":44,"column":0},"end":{"line":44,"column":35}},"11":{"start":{"line":45,"column":0},"end":{"line":45,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":23},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":21},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":20},"end":{"line":26,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":17},"end":{"line":29,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":23},"end":{"line":36,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":2,"1":2,"2":2,"3":2,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102/src/ejercicio-1/collectable.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-alu0101202952/pe-102/src/ejercicio-1/collectable.ts"],"names":[],"mappings":";;;AAYA;;;GAGG;AACH,MAAa,WAAW;IACpB,YAAoB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAAG,CAAC;IAElC;;;OAGG;IACI,OAAO,CAAC,OAAU;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,OAAO,CAAC,MAAc;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAGM,UAAU;QACb,OAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACI,gBAAgB;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;CACJ;AAhCD,kCAgCC;AAED;;GAEG;AACH,MAAM,UAAU,GAAG,IAAI,WAAW,CAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,CAAC","sourcesContent":["/**\n * EJERCICIO PE-102\n * @interface CollectableInterface genérica tipo T\n * @method addItem() recibe el nuevo valor a añadir\n */\ninterface CollectableInterface<T> {\n    addItem(nuevoValor: T): void;\n    getItem(index: number): T;\n    removeItem(): void;\n    //getNumberOfItems(): number;\n}\n\n/**\n * @class Collectable que implementa la interfaz genérica CollectableInterface\n * @param items array de tipos genéricos de valores\n */\nexport class Collectable<T> implements CollectableInterface<T> {\n    constructor(private items: T[]) {}\n  \n    /**\n     * Método public addItem() añade un valor al array\n     * @param newItem a añadir\n     */\n    public addItem(newItem: T) {\n      this.items.push(newItem);\n    }\n  \n    /**\n     * Método publico getItem() del indice que se indica\n     * @param indice 2 entonces posicion 2 del array\n     * @returns el valor del indice\n     */\n    public getItem(indice: number) {\n      return this.items[indice];\n    }\n    \n    \n    public removeItem() {\n        return(this.items.pop());\n    }\n    \n    /**\n     * Método public getNumberOfItems() numero de objetos del array\n     * @returns tamaño del array\n     */\n    public getNumberOfItems() {\n      return this.items.length;\n    }\n}\n\n/**\n * Salida por pantalla\n */\nconst collection = new Collectable<number>([1, 2, 3]);\nconsole.log(collection.addItem(4));\nconsole.log(collection.getItem(2));\nconsole.log(collection.removeItem());\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec47dc660000c62445a89e874cfd2eb260dfaad3","contentHash":"cecb7d67e0fcf2a25185a23219fd3f7d047f4bb2bf59c667a9b986705d09f524"}}